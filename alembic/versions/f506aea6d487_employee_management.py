"""Employee Management

Revision ID: f506aea6d487
Revises: 
Create Date: 2024-10-24 19:18:31.164577

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f506aea6d487"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - adjust by me ###
    op.create_table(
        "blacklist_tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "employees",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("birth_date", sa.DATE(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("cnss_number", sa.String(), nullable=True),
        sa.Column(
            "contract_type",
            sa.Enum("Cdi", "Cdd", "Sivp", "Apprenti", name="contracttype"),
            nullable=False,
        ),
        sa.Column("gender", sa.Enum("Male", "Female", name="gender"), nullable=False),
        sa.Column(
            "account_status",
            sa.Enum("Active", "Inactive", name="accountstatus"),
            nullable=False,
        ),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.CheckConstraint(
            "(contract_type IN ('Cdi','Cdd') AND cnss_number IS NOT NULL AND cnss_number ~ '^\\d{8}-\\d{2}$') OR (contract_type IN ('Apprenti','Sivp') AND (cnss_number is NULL OR  cnss_number ~ '^\\d{8}-\\d{2}$'))",
            name="ck_employees_cnss_number",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "accounts_activation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column(
            "status", sa.Enum("Used", "Pending", name="tokenstatus"), nullable=True
        ),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "employee_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("Admin", "InventoryManager", "SuperUser", "Vendor", name="role"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reset_passwords",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column(
            "status", sa.Enum("Used", "Pending", name="tokenstatus"), nullable=True
        ),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - adjust by me###
    op.drop_table("reset_passwords")
    op.drop_table("employee_roles")
    op.drop_table("accounts_activation")
    op.drop_table("employees")
    op.drop_table("blacklist_tokens")
    # ### end Alembic commands ###
